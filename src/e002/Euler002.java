package e002;

/**
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the
 * first 10 terms will be:
 *                          1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the
 * even-valued terms.
 */
public class Euler002 {
    public static void main(String[] args) {
        System.out.println(new Euler002().run());
    }

    public String run() {
        int sum = 0, fib = -1;

        for (int i = 0; true; i++) {
            fib = fibonacci(i);

            if (fib > 4000000) {
                break ;
            }

            if (fib % 2 == 0) {
                sum += fib;
            }
        }

        return Integer.toString(sum);
    }

    // calculate the n-th fibonacci
    private int fibonacci(int x) {
        int a = 0;
        int b = 1;

        for (int i = 0; i < x; i++) {
            int c = a + b;
            a = b;
            b = c;
        }

        return a;
    }
}
